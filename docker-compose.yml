# docker-compose.yml - declarative architecture of acronyms.io dev environment
#
# launch the network with:  ~/acronyms.io$ docker-compose up
#

services:

  # tiny linux distro for poking around the network
  alpine:
    image: alpine
    command: ifconfig
    networks:
      acro_net:
        ipv4_address: 172.16.1.2

  # database server
  postgres:
    image: postgres:9.6-alpine
    environment: 
      POSTGRES_DB: acro_dev
      POSTGRES_USER: acro_dev
      POSTGRES_PASSWORD: acro_dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      acro_net:
        ipv4_address: 172.16.1.3

  # python/django api
  api:
    build:
      context: api
    depends_on:
      - 'postgres'
    volumes:
      - type: bind
        source: ./api
        target: /api
    networks:
      acro_net:
        ipv4_address: 172.16.1.4

  # react frontend ui
  web:
    build:
      context: web
    depends_on:
      - 'api'
    volumes:
      - type: bind
        source: ./web
        target: /node_app/web
    networks:
      acro_net:
        ipv4_address: 172.16.1.5

  # nginx web proxy
  nginx:
    build:
      context: nginx
    depends_on:
      - 'api'
      - 'web'
    ports:
      - '80:80'
    networks:
      acro_net:
        ipv4_address: 172.16.1.6


# define our subnet 172.16.1.*
networks:
  acro_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet:  172.16.1.0/24
          gateway: 172.16.1.1


# docker-managed local volumes that will persist between restarts of the containers
volumes:
  postgres-data:

