
Issue: CSRF error hitting the django api at :8000/accounts/login

  The web API doesn't have the CSRF token it would normally get from that server
  But an attempt to get the token via a custom endpoint fails due to the same error


Ideas
  - Allow specific host
    - this didn't seem to work, the contrib.auth middleware (paths added at /accounts/
      by django) seems to ignore it

  - Disable CSRF altogether?
    - not a security issue in dev and shouldn't be a problem by deployment since we'll
      have merged the two sites into one by then (same-origin policy will be satisfied)

  - Merge the two projects so that django uses the final prod build of .js resources
    - however this requires us to run 'npm build' every time to get the new .js which 
      takes too much time and likely removes the rich integration we get with the React
      dev server
    - but keeping the hot-reloading server separate at :3000 forces us to deal with CSRF

  - Try to circumvent the need for CSRF altogether
    - configure an nginx reverse proxy to host both projects from one ip:port, and
      distinguish services based on path prefixes. hopefully this tricks the browser
      into thinking the API call is going to the the same source the web page came from


Resolution

  The nginx option didn't work, although I did get it to route to the separate ports based
  on the path prefix, so that's good to know

  I figured out how to configure the project for allowing a specific host (the React
  server in this case) to make API calls:

    - set "CORS_ALLOW_CREDENTIALS = True" and others in settings.py
    - set axios.defaults.withCredentials = true to allow cookie setting/getting via axios
    - also have to send the X-CSRFToken header with each request

Resources

  https://stackoverflow.com/questions/59543733/how-can-i-authenticate-a-post-request-in-django/59544178#59544178

