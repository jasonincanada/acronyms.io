# docker-compose.yml - declarative architecture of acronyms.io prod environment
#
# launch the network with:
#
#   ~/acronyms.io$ docker-compose -f docker-compose.prod.yml up
#

services:

  # tiny linux distro for poking around the network
  alpine:
    image: alpine
    command: ifconfig
    networks:
      acro_net:
        ipv4_address: 172.16.1.2

  # database server
  postgres:
    image: postgres:9.6-alpine
    environment: 
      POSTGRES_DB: acro_dev
      POSTGRES_USER: acro_dev
      POSTGRES_PASSWORD: acro_dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      acro_net:
        ipv4_address: 172.16.1.3

  # python/django api
  api:
    build:
      context: api
    depends_on:
      - 'postgres'
    volumes:
      - type: bind
        source: ./api
        target: /api
    networks:
      acro_net:
        ipv4_address: 172.16.1.4

  # python/django background task processor
  bg-tasks:
    build:
      context: api
      dockerfile: Dockerfile.bg-tasks
    depends_on:
      - 'postgres'
    volumes:
      - type: bind
        source: ./api
        target: /api

        # we're sharing the same bind-mount with the API server
        # so make sure we can't make changes to it
        read_only: true
    networks:
      acro_net:
        ipv4_address: 172.16.1.8

  # nginx web proxy and react app bundled into one container
  nginx:
    build:
      context: web
      dockerfile: Dockerfile.prod
    depends_on:
      - 'api'
    volumes:
      - web-root:/usr/share/nginx/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - /home/ubuntu/acronyms.io/dhparam:/etc/ssl/certs
    ports:
      - '80:80'
      - '443:443'
    networks:
      acro_net:
        ipv4_address: 172.16.1.6

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - 'nginx'
    networks:
      acro_net:
        ipv4_address: 172.16.1.9
    command: certonly --webroot --webroot-path=/var/www/html --email nirgle@gmail.com --agree-tos --no-eff-email -d acronyms.io  -d www.acronyms.io


# define our subnet 172.16.1.*
networks:
  acro_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet:  172.16.1.0/24
          gateway: 172.16.1.1


# docker-managed local volumes that will persist between restarts of the containers
volumes:
  postgres-data:
  pgadmin-data:
  nodemodules-hosted:
  web-root:
  certbot-etc:
  certbot-var:

